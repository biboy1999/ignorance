{"version":3,"file":"static/js/11.4d0d18f8.chunk.js","mappings":"yBAUAA,UAAY,SAACC,GACX,MAAyBA,EAAEC,KAAnBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,IACjBC,MAAMD,EAAK,CACTE,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,QAAS,CACP,eAAgB,sBAGjBC,MAAK,SAACC,GACL,IAAKA,EAAKC,GAAI,MAAMC,MAAM,oBAC1B,OAAOF,EAAKG,MACb,IACAJ,MAAK,SAACT,GAAD,OAAUc,YAAYd,EAAtB,IACLe,OAAM,SAAChB,GACNiB,YAAW,WACT,MAAMjB,CACP,GACF,GACJ,C","sources":["worker/fetch.ts"],"sourcesContent":["import { TransformRequest } from \"../types/types\";\n\n// eslint-disable-next-line\ndeclare const self: DedicatedWorkerGlobalScope;\n\nexport type FetchMessageType = {\n  request: TransformRequest;\n  url: string;\n};\n\nonmessage = (e: MessageEvent<FetchMessageType>): void => {\n  const { request, url } = e.data;\n  fetch(url, {\n    method: \"POST\",\n    body: JSON.stringify(request),\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n  })\n    .then((resp) => {\n      if (!resp.ok) throw Error(\"Not 2xx Response\");\n      return resp.json();\n    })\n    .then((data) => postMessage(data))\n    .catch((e) => {\n      setTimeout(() => {\n        throw e;\n      });\n    });\n};\n\n// export default null as any;\nexport {};\n"],"names":["onmessage","e","data","request","url","fetch","method","body","JSON","stringify","headers","then","resp","ok","Error","json","postMessage","catch","setTimeout"],"sourceRoot":""}